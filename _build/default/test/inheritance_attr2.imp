var _6;
var _7;
var _11;
var _3;
var _4;
var _1;
var _0;
var _9;
var _10;
var _5;
var _8;
var _2;
var _12;
var circle_descr;
var point_descr;
var carre_descr;

function main() {
  var p;
  var p2;
  var c;
  var carre;
  
  _0 = 1;
  _1 = 2;
  _2 = alloc(16);
  *_2 = *point_descr;
  point_constructor(_2, _0, _1);
  p = _2;
  _3 = 5;
  _4 = -5;
  _5 = alloc(16);
  *_5 = *point_descr;
  point_constructor(_5, _3, _4);
  p2 = _5;
  p;
  _6 = 48;
  _7 = *(*(*p + 16))(p, _6);
  c = _7;
  _8 = 5;
  _9 = alloc(16);
  *_9 = *carre_descr;
  carre_constructor(_9, _8);
  carre = _9;
  p2;
  _10 = *(*(*p2 + 4))(p2);
  putchar(_10);
  p;
  _11 = *(*(*p + 4))(p);
  putchar(_11);
  carre;
  _12 = *(*(*carre + 4))(carre);
  putchar(_12);
  c;
  putchar(c);
}

function circle_constructor(_this, z) {
  
  *(_this + (4 * 1)) = z;
}

function circle_get_z(_this) {
  
  return((*(_this + (4 * 1)) + 97));
}

function circle_test(_this) {
  
  return(1);
}

function point_constructor(_this, x, y) {
  
  *(_this + (4 * 2)) = x;
  *(_this + (4 * 3)) = y;
  *(*(**_this + 4))(_this, (x + y));
}

function point_sum(_this, x) {
  
  return(((x + *(_this + (4 * 2))) + *(_this + (4 * 3))));
}

function carre_constructor(_this, x) {
  
  *(*(**_this + 12))(_this, x, x);
}


